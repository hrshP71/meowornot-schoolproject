{"remainingRequest":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beastos/Desktop/Front-End/school-project.v2.1/src/components/Voting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/src/components/Voting.vue","mtime":1557066935669},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data: ()=>({\n          sub_id: \"\",\n          image:{},\n          votes:[],\n          headers: [\n            { text: 'date' },\n            { text: 'image_id' },\n            { text: 'value' },\n            { text: 'sub_id' },\n            { text: 'country' }\n          ],\n        }),\n        created(){\n            this.getImage();\n            this.getVotes();\n        } ,\n        methods:{\n            async getImage()\n            {\n                try{\n                    axios.defaults.headers.common['x-api-key'] = \"DEMO-API-KEY\" // Replace this with your API Key, as it's set to defaults it will be used from now onwards\n\n                    let response = await axios.get('https://api.thecatapi.com/v1/images/search', { params: { limit:1, size:\"full\" } } ) // Ask for 1 Image, at full resolution\n                    \n                    this.image = response.data[0] // the response is an Array, so just use the first item as the Image\n\n                    console.log(\"-- Image from TheCatAPI.com\")\n                    console.log(\"id:\", this.image.id)\n                    console.log(\"url:\", this.image.url)\n\n                }catch(err){\n                    console.log(err)\n                }\n            },\n            async voteUp(){\n              let body = {\n                  image_id: this.image.id,\n                  sub_id: this.sub_id,\n                  value: 1 // Voting up (you like it) so send 1\n              }\n              let response = await axios.post('https://api.thecatapi.com/v1/votes', body ) // Send the body to create a Vote in your Account\n                    \n              await this.getImage();\n              await this.getVotes();\n            },\n            async voteDown(){\n\n              let body = {\n                  image_id: this.image.id,\n                  sub_id: this.sub_id,\n                  value: 0 // Voting down (you don't like) so send 0\n              }\n              let response = await axios.post('https://api.thecatapi.com/v1/votes', body ) // Send the body to create a Vote in your Account\n                    \n              await this.getImage();\n              await this.getVotes();\n            },\n            async getVotes()\n            {\n\n              let response = await axios.get('https://api.thecatapi.com/v1/votes', { params: { order:\"DESC\", limit:25 } } ) // Get the last 25 votes\n              \n              response.data.forEach(element => {\n                //element.created_at = new Date(element.created_at).toString();// full time string including timezone\n                element.created_at = new Date(element.created_at).toJSON().slice(0,10)// just use the date for now\n              });\n\n              this.votes = response.data;\n            }\n        }\n    }\n\n",{"version":3,"sources":["Voting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Voting.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n    <v-app>\n      <v-content>\n        <v-container>\n                <v-toolbar color=\"deep-purple darken-1 white--text\">\n                  <v-toolbar-side-icon dark></v-toolbar-side-icon>\n                  <v-toolbar-title>Meow or Not!</v-toolbar-title>\n                  <v-spacer></v-spacer>\n                  <v-toolbar-items class=\"hidden-sm-and-down\">\n                    <v-btn dark flat value=\"true\">Kitty tour</v-btn>\n                    <v-btn dark flat class=\"v-btn--active\">Ranking</v-btn>\n                    <v-btn dark flat>Upload</v-btn>\n                    <v-btn dark color=\"white--text\" flat>Sign Up</v-btn>\n                  </v-toolbar-items>\n                </v-toolbar>\n                <v-layout align-center justify-center class=\"color-purple\">\n                    <v-btn color=\"pink lighten-4 grey--text text--darken-4 large\" @click=\"voteUp\" >\n                        <v-icon>thumb_up</v-icon>&nbsp; Meow</v-btn>\n                            <v-btn flat icon color=\"pink\">\n                              <v-icon>favorite</v-icon>\n                            </v-btn>\n                                <v-btn flat icon color=\"pink\" @click=\"voteDown\">\n                                  <v-icon>thumb_down</v-icon>\n                                </v-btn>\n                              </v-flex>\n                \n                </v-layout>\n            \n            <v-layout justify-center>\n                \n        <v-flex xs12 sm6 md3>\n            <v-text-field \n              label=\"Enter your username here :\"\n              placeholder=\"\"\n              v-model=\"sub_id\"\n            ></v-text-field>\n          </v-flex>\n            </v-layout>\n\n            <v-layout row wrap>\n                <v-flex xs12 >\n                <v-card flat tile class=\"d-flex\">\n                    <v-img height=\"500px\" :src=\"image.url\" aspect-ratio=\"1\">\n                    </v-img>\n                </v-card>\n                </v-flex>\n            </v-layout>\n\n\n            <v-layout row wrap>\n                <v-flex xs12 >\n  <v-data-table\n  :headers=\"headers\"\n  :items=\"votes\"\n  class=\"elevation-1\"\n  color=\"white\"\n  dark\n>\n  <template slot=\"items\" slot-scope=\"props\">\n    <td>{{ props.item.created_at }}</td>\n    <td class=\"text-xs-left\">{{ props.item.image_id }}</td>\n    <td class=\"text-xs-left\">{{ props.item.value }}</td>\n    <td>{{ props.item.sub_id }}</td>\n    <td>{{ props.item.country_code }}</td>\n  </template>\n</v-data-table>\n\n</v-flex>\n</v-layout>\n        </v-container>\n      </v-content>\n    </v-app>\n  </div>\n</template>\n\n\n<script>\nexport default {\n    data: ()=>({\n          sub_id: \"\",\n          image:{},\n          votes:[],\n          headers: [\n            { text: 'date' },\n            { text: 'image_id' },\n            { text: 'value' },\n            { text: 'sub_id' },\n            { text: 'country' }\n          ],\n        }),\n        created(){\n            this.getImage();\n            this.getVotes();\n        } ,\n        methods:{\n            async getImage()\n            {\n                try{\n                    axios.defaults.headers.common['x-api-key'] = \"DEMO-API-KEY\" // Replace this with your API Key, as it's set to defaults it will be used from now onwards\n\n                    let response = await axios.get('https://api.thecatapi.com/v1/images/search', { params: { limit:1, size:\"full\" } } ) // Ask for 1 Image, at full resolution\n                    \n                    this.image = response.data[0] // the response is an Array, so just use the first item as the Image\n\n                    console.log(\"-- Image from TheCatAPI.com\")\n                    console.log(\"id:\", this.image.id)\n                    console.log(\"url:\", this.image.url)\n\n                }catch(err){\n                    console.log(err)\n                }\n            },\n            async voteUp(){\n              let body = {\n                  image_id: this.image.id,\n                  sub_id: this.sub_id,\n                  value: 1 // Voting up (you like it) so send 1\n              }\n              let response = await axios.post('https://api.thecatapi.com/v1/votes', body ) // Send the body to create a Vote in your Account\n                    \n              await this.getImage();\n              await this.getVotes();\n            },\n            async voteDown(){\n\n              let body = {\n                  image_id: this.image.id,\n                  sub_id: this.sub_id,\n                  value: 0 // Voting down (you don't like) so send 0\n              }\n              let response = await axios.post('https://api.thecatapi.com/v1/votes', body ) // Send the body to create a Vote in your Account\n                    \n              await this.getImage();\n              await this.getVotes();\n            },\n            async getVotes()\n            {\n\n              let response = await axios.get('https://api.thecatapi.com/v1/votes', { params: { order:\"DESC\", limit:25 } } ) // Get the last 25 votes\n              \n              response.data.forEach(element => {\n                //element.created_at = new Date(element.created_at).toString();// full time string including timezone\n                element.created_at = new Date(element.created_at).toJSON().slice(0,10)// just use the date for now\n              });\n\n              this.votes = response.data;\n            }\n        }\n    }\n\n</script>\n"]}]}