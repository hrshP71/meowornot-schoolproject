{"remainingRequest":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beastos/Desktop/Front-End/school-project.v2.1/src/components/Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/src/components/Upload.vue","mtime":1557065663969},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beastos/Desktop/Front-End/school-project.v2.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport axios from 'axios'\nimport Vuex from 'vuex'\nimport { vList } from \"vuetify\";\n\nVue.use(Vuetify);\nVue.use(axios);\nVue.use(Vuex);\n\nexport default {\n    data: ()=>({\n            image_name:\"\",\n            image_file:\"\",\n            image_url:\"\",\n\n            uploading:false,\n\n            uploaded_image:{},\n\n            image_analysis:[],\n            headers: [\n            { text: 'Name' },\n            { text: 'Confidence' }\n            ],\n\n          error_message:null,\n        }),\n        created(){\n           \n        } ,\n        methods:{\n            pickFile () {\n                this.error_message = null\n                this.$refs.image.click ()\n            },\n            \n            onFilePicked (e) {\n                const files = e.target.files\n                if(files[0] !== undefined) {\n                    this.image_name = files[0].name\n                    if(this.image_name.lastIndexOf('.') <= 0) {\n                        return\n                    }\n                    const fr = new FileReader ()\n                    fr.readAsDataURL(files[0])\n                    fr.addEventListener('load', () => {\n                        this.image_url = fr.result\n                        this.image_file = files[0]\n                    })\n                } else {\n                    this.image_name = ''\n                    this.image_file = ''\n                    this.image_url = ''\n                }\n            },\n            async uploadFile()\n            {\n                this.uploading = true;\n                let formData = new FormData();\n                formData.append('file',this.image_file);\n    \n                try{\n                    axios.defaults.headers.common['x-api-key'] = \"DEMO-API-KEY\" // Replace this with your API Key\n                    let response = await axios.post('https://api.thecatapi.com/v1/images/upload', formData, {headers: {'Content-Type':'multipart/form-data' }}) \n                    console.log(response.data)\n                    this.uploaded_image = response.data\n                    this.uploading = false;\n                    this.image_file = null\n                    this.loadImageAnaylsis(this.uploaded_image.id)\n\n                }catch(error){\n                    console.log(error)\n                    this.error_message = error.response.data.message\n                    this.uploading = false;\n                    this.image_file = null\n                }\n            },\n            async loadImageAnaylsis(image_id)\n            {\n\n                let response = await axios.get('https://api.thecatapi.com/v1/images/'+image_id +\"/analysis\") // Ask for 1 Image, at full resolution\n                \n                this.image_analysis = response.data[0].labels\n                console.table(response.data[0].labels)\n            }\n        }\n        \n    }\n",{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA","file":"Upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>    \n        <v-app>\n            <v-content>\n                    <v-card flat tile>\n                        <v-toolbar color=\"deep-purple darken-1 white--text\">\n                          <v-toolbar-side-icon dark></v-toolbar-side-icon>\n                          <v-toolbar-title>Meow or Not!</v-toolbar-title>\n                          <v-spacer></v-spacer>\n                          <v-toolbar-items class=\"hidden-sm-and-down\">\n                            <v-btn dark flat value=\"true\">Kitty tour</v-btn>\n                            <v-btn dark flat>Ranking</v-btn>\n                            <v-btn class=\"v-btn--active\" dark>Upload</v-btn>\n                            <v-btn dark color=\"white--text\" flat>Sign Up</v-btn>\n                          </v-toolbar-items>\n                        </v-toolbar>\n                    </v-card>   \n                <v-container fluid>\n                    <v-flex xs12 class=\"text-xs-center text-sm-center text-md-center text-lg-center\">\n                       \n                    <v-img :src=\"image_url\" height=\"300px\" v-if=\"image_url\" contain></v-img>\n\n                        <v-text-field dark label=\"Select Image\" @click='pickFile' v-model='image_name' prepend-icon='attach_file'></v-text-field>\n                        <input\n                            type=\"file\"\n                            style=\"display: none\"\n                            ref=\"image\"\n                            accept=\"image/*\"\n                            @change=\"onFilePicked\"\n                        >\n                    </v-flex>\n                    <v-layout align-center justify-center>\n                        <v-btn v-show=\"!uploading\" color=\"indigo\" dark large @click=\"pickFile\" >\n                            Choose New Image &nbsp; <v-icon>upload</v-icon>\n                        </v-btn>\n                        <v-btn v-show=\"image_file && !uploading\" color=\"blue\" dark large @click=\"uploadFile\" >\n                            Upload &nbsp; <v-icon>upload</v-icon>\n                        </v-btn>\n                        <div v-show=\"uploading\">Uploading</div>\n                    </v-layout>\n                </v-container>\n\n                <v-container>\n\n\n                    <v-alert v-show=\"error_message\"\n                    :value=\"true\"\n                    type=\"error\"\n                  >\n                    {{error_message}}\n                  </v-alert>\n        \n                        <v-layout row wrap>\n                                <v-flex xs12 >\n                                <v-data-table\n                                :headers=\"headers\"\n                                :items=\"image_analysis\"\n                                class=\"elevation-1\"\n                                :total-items=\"image_analysis.length\"\n                                hide-actions\n                                >\n                                <template slot=\"items\" slot-scope=\"props\">\n                                    <td>{{ props.item.Name }}</td>\n                                    <td>{{ props.item.Confidence }}</td>\n                                </template>\n                                </v-data-table>\n                \n                                </v-flex>\n                            </v-layout>\n                \n                </v-container>\n            </v-content>\n        </v-app>\n    </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport axios from 'axios'\nimport Vuex from 'vuex'\nimport { vList } from \"vuetify\";\n\nVue.use(Vuetify);\nVue.use(axios);\nVue.use(Vuex);\n\nexport default {\n    data: ()=>({\n            image_name:\"\",\n            image_file:\"\",\n            image_url:\"\",\n\n            uploading:false,\n\n            uploaded_image:{},\n\n            image_analysis:[],\n            headers: [\n            { text: 'Name' },\n            { text: 'Confidence' }\n            ],\n\n          error_message:null,\n        }),\n        created(){\n           \n        } ,\n        methods:{\n            pickFile () {\n                this.error_message = null\n                this.$refs.image.click ()\n            },\n            \n            onFilePicked (e) {\n                const files = e.target.files\n                if(files[0] !== undefined) {\n                    this.image_name = files[0].name\n                    if(this.image_name.lastIndexOf('.') <= 0) {\n                        return\n                    }\n                    const fr = new FileReader ()\n                    fr.readAsDataURL(files[0])\n                    fr.addEventListener('load', () => {\n                        this.image_url = fr.result\n                        this.image_file = files[0]\n                    })\n                } else {\n                    this.image_name = ''\n                    this.image_file = ''\n                    this.image_url = ''\n                }\n            },\n            async uploadFile()\n            {\n                this.uploading = true;\n                let formData = new FormData();\n                formData.append('file',this.image_file);\n    \n                try{\n                    axios.defaults.headers.common['x-api-key'] = \"DEMO-API-KEY\" // Replace this with your API Key\n                    let response = await axios.post('https://api.thecatapi.com/v1/images/upload', formData, {headers: {'Content-Type':'multipart/form-data' }}) \n                    console.log(response.data)\n                    this.uploaded_image = response.data\n                    this.uploading = false;\n                    this.image_file = null\n                    this.loadImageAnaylsis(this.uploaded_image.id)\n\n                }catch(error){\n                    console.log(error)\n                    this.error_message = error.response.data.message\n                    this.uploading = false;\n                    this.image_file = null\n                }\n            },\n            async loadImageAnaylsis(image_id)\n            {\n\n                let response = await axios.get('https://api.thecatapi.com/v1/images/'+image_id +\"/analysis\") // Ask for 1 Image, at full resolution\n                \n                this.image_analysis = response.data[0].labels\n                console.table(response.data[0].labels)\n            }\n        }\n        \n    }\n</script>\n\n<style scoped>\n    .container{\n        background-color:#474747;\n    }\n    td{\n        background-color:#0a0e2c;\n        color:white;\n    }\n    .v-content__wrap {\n    -webkit-box-flex: 1;\n    -ms-flex: 1 1 auto;\n    flex: 1 1 auto;\n    max-width: 100%;\n    position: relative;\n    background: #333;\n}\n</style>\n"]}]}